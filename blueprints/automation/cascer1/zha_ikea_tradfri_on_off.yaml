blueprint:
  source_url: https://github.com/cascer1/ha-config/blob/master/blueprints/automation/cascer1/zha_ikea_tradfri_on_off.yaml
  name: ZHA - IKEA TRADFRI - on/off Remote
  description: This automation simulates the use of the IKEA TRADFRI on/off remote control
    connected through ZHA.
  domain: automation
  input:
    remote:
      name: IKEA TRADFRI remote control
      description: Select the remote control you wish to use.
      selector:
        device:
          integration: zha
          manufacturer: IKEA of Sweden
          model: TRADFRI on/off switch
    on_short:
      name: Short Press - On Button
      description: The action to perform on Short Press of the On Button
      selector:
        action: {}
      default: []
    off_short:
      name: Short Press - Off Button
      description: The action to perform on Short Press of the Off Button
      selector:
        action: {}
      default: []
    on_long:
      name: Long Press - On Button
      description: The action to perform on Long Press of the On Button
      selector:
        action: {}
      default: []
    off_long:
      name: Long Press - Off Button
      description: The action to perform on Long Press of the Off Button
      selector:
        action: {}
      default: []
    on_double:
      name: Double Press - On Button
      description: The action to perform on Double Press of the On Button
      selector:
        action: {}
      default: []
    off_double:
      name: Double Press - Off Button
      description: The action to perform on Double Press of the Off Button
      selector:
        action: {}
      default: []
mode: restart
max_exceeded: silent
trigger:
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
action:
- choose:
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.command == "on" }}'
    sequence:
    - service: script.zha_store_click
      data_template:
        device: '{{ trigger.event.data.device_ieee }}'
        command: '{{ trigger.event.data.command }}'
    - delay: 0.5
    - choose:
      - conditions:
        - condition: template
          value_template: '{% set click_count = states("input_text.zha_click").split(",")[3]|int
            %}

            {{ click_count >= 2}}

            '
        sequence: !input 'on_double'
      default: !input 'on_short'
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.command == "move_with_on_off" }}'
    sequence: !input 'on_long'
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.command == "off" }}'
    sequence:
    - service: script.zha_store_click
      data_template:
        device: '{{ trigger.event.data.device_ieee }}'
        command: '{{ trigger.event.data.command }}'
    - delay: 0.5
    - choose:
      - conditions:
        - condition: template
          value_template: '{% set click_count = states("input_text.zha_click").split(",")[3]|int
            %}

            {{ click_count >= 2}}

            '
        sequence: !input 'off_double'
      default: !input 'off_short'
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.command == "move" }}'
    sequence: !input 'off_long'
  default: []
