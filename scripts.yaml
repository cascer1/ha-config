thermostat_away:
  alias: Thermostat to away
  description: Set the thermostat temperature to the configured away temperature
  icon: mdi:thermostat
  mode: single
  sequence:
  - service: climate.turn_off
    target:
      entity_id:
      - climate.bedroom
      - climate.living_room
    data: {}
thermostat_home:
  alias: Thermostat to home
  description: Set the thermostat temperature to the configured home temperature
  icon: mdi:thermostat
  mode: single
  sequence:
  - service: climate.set_preset_mode
    target:
      entity_id:
      - climate.bathroom
      - climate.office
      - climate.hallway
    data:
      preset_mode: none
  - service: script.reload_climate_automations
home_music:
  alias: Home Music
  sequence:
  - service: media_player.join
    data:
      group_members:
      - media_player.living_room_arc
      - media_player.upstairs
    target:
      entity_id:
      - media_player.living_room_arc
      - media_player.upstairs
  - service: media_player.shuffle_set
    data:
      shuffle: true
    target:
      entity_id: media_player.living_room_arc
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: media_player.play_media
    target:
      entity_id: media_player.living_room_arc
    data:
      media_content_id: FV:2/19
      media_content_type: favorite_item_id
    metadata:
      title: Living Room
      thumbnail: https://mosaic.scdn.co/640/ab67616d0000b273583f1300f2b356b42dd231b4ab67616d0000b2738b62f896e8d3ca8dad7588e7ab67616d0000b273f1ea3305aa003425dda05882ab67616d0000b273f60070dce96a2c1b70cf6ff0
      media_class: playlist
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: favorites
        media_content_id: ''
      - media_content_type: favorites_folder
        media_content_id: object.container.playlistContainer
  - service: media_player.volume_set
    entity_id: media_player.living_room_arc
    data:
      volume_level: '{{ states(''input_number.home_music_volume_level'') }}'
  - service: media_player.volume_set
    entity_id: media_player.upstairs
    data:
      volume_level: '{{ states(''input_number.home_music_volume_level'') }}'
  - service: media_player.repeat_set
    data:
      repeat: all
    target:
      entity_id: media_player.living_room_arc
  - service: media_player.media_next_track
    data: {}
    target:
      entity_id: media_player.living_room_arc
  mode: single
  icon: mdi:music
wake_up:
  alias: Wake Up
  icon: mdi:alarm
  sequence:
  - service: script.turn_on
    data: {}
    target:
      entity_id: script.home_music
  - service: input_boolean.turn_on
    entity_id: input_boolean.woken_up
  - service: switch.turn_on
    target:
      entity_id: switch.adaptive_lighting_bedroom
    data: {}
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.living_room_automatic_lights
    data: {}
  mode: single
doorbell:
  alias: Doorbell
  description: Ring the door bell
  fields:
    count:
      description: How many times to ring the bell
      example: 1
  sequence:
  - service: light.turn_on
    data:
      flash: short
    target:
      entity_id:
      - light.office_ceiling
      - light.garden_table
      - light.dining_table_up
      - light.dining_table_down
  - service: script.turn_on
    data: {}
    target:
      entity_id: script.doorbell_light
  - service: sonos.snapshot
    data:
      entity_id: media_player.upstairs
  - service: media_player.media_pause
    data: {}
    target:
      entity_id: media_player.upstairs
  - service: media_player.volume_set
    data:
      volume_level: 0.25
    target:
      entity_id: media_player.upstairs
  - service: media_player.play_media
    data:
      media_content_id: https://assistant.eliens.co/local/doorbell1.wav
      media_content_type: music
    target:
      entity_id: media_player.upstairs
  - service: media_player.play_media
    data:
      media_content_id: media-source://media_source/local/doorbell1.wav
      media_content_type: audio/x-wav
    target:
      entity_id:
      - media_player.office_speaker
    enabled: false
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 500
  - service: media_player.repeat_set
    data:
      repeat: 'off'
    target:
      entity_id: media_player.upstairs
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 500
  - service: sonos.restore
    data:
      entity_id: media_player.upstairs
  - condition: state
    entity_id: group.awesome_people
    state: not_home
  - service: notify.mobile_app_cas_phone
    data:
      message: Someone just rang the door bell
      title: "Ding Dong \U0001F514"
  mode: single
  icon: mdi:bell
reload_climate_automations:
  alias: Execute climate schedules
  sequence:
  - service: scheduler.run_action
    data:
      entity_id: switch.schedule_living_room_heating_friday
  - service: scheduler.run_action
    data:
      entity_id: switch.schedule_living_room_heating_vacation
  - service: scheduler.run_action
    data:
      entity_id: switch.schedule_living_room_heating_weekend
  - service: scheduler.run_action
    data:
      entity_id: switch.schedule_living_room_heating_workdays
  - service: scheduler.run_action
    data:
      entity_id: switch.schedule_bathroom_heating_weekend
  - service: scheduler.run_action
    data:
      entity_id: switch.schedule_bathroom_heating_workdays
  - service: scheduler.run_action
    data:
      entity_id: switch.schedule_office_heating_weekend
  - service: scheduler.run_action
    data:
      entity_id: switch.schedule_office_heating_workdays
  - service: scheduler.run_action
    data:
      entity_id: switch.schedule_office_heating_unoccupied
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.climate_mode
        state: cool
      sequence:
      - service: climate.turn_off
        target:
          entity_id:
          - climate.tstat_8d728f
          - climate.office
          - climate.hallway
          - climate.bathroom
        data: {}
    default: []
  mode: single
  icon: fapro:sync
thermostat_sleep:
  alias: Thermostat to sleep
  description: Turn off the thermostat for sleep
  icon: mdi:thermostat
  mode: single
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.climate_mode
        state: heat
      sequence:
      - service: climate.set_temperature
        target:
          entity_id:
          - climate.bathroom
          - climate.office
        data:
          temperature: 16
    - conditions:
      - condition: state
        entity_id: input_select.climate_mode
        state: cool
      sequence:
      - service: climate.turn_off
        target:
          entity_id: climate.living_room
    default: []
zha_store_click:
  alias: Store ZHA click
  description: Store the most recent ZHA event
  mode: queued
  sequence:
  - service: input_text.set_value
    data_template:
      entity_id: input_text.zha_click
      value: "{%- set data = states(\"input_text.zha_click\").split(\",\") %} {%-
        set previous_device = data[0]|trim %} {%- set previous_command = data[1]|trim
        %} {%- set click = as_timestamp(now())|float %} {%- set previous_click = data[2]|float
        %} {%- set click_delta = click - previous_click %} {%- set click_count = data[3]|int
        %} {{- device|trim }}, {{- command|trim }}, {{- click }}, {%- if click_delta
        <= 0.5 and previous_device == device|trim and previous_command == command
        %}\n  {{- click_count + 1 }}\n{%- else %}\n  {{- 1 }}\n{%- endif %}"
determine_alarm_light_fade_time:
  alias: Determine alarm light fade time
  description: Figure out the time when the bedroom lights should start fading to
    on
  mode: single
  variables:
    bertTime: '{{ states(''sensor.bert_phone_next_alarm'') | as_timestamp(''9999999000'')
      | int }}'
    casTime: '{{ states(''sensor.cas_phone_next_alarm'') | as_timestamp(''9999999000'')
      | int }}'
    bertHome: '{{ states(''person.bert'') == ''home'' }}'
    casHome: '{{ states(''person.cas_eliens'') == ''home'' }}'
  sequence:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: template
          value_template: '{{ casHome and casTime <= bertTime and casTime > 0}}'
        - condition: template
          value_template: '{{ casHome and bertTime == 0 and casTime > 0 }}'
      sequence:
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.alarm_time
        data:
          timestamp: '{{ casTime - 180 }}'
    - conditions:
      - condition: template
        value_template: '{{ bertHome and bertTime > 0 }}'
      sequence:
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.alarm_time
        data:
          timestamp: '{{ bertTime - 180 }}'
    default:
    - service: input_datetime.set_datetime
      target:
        entity_id: input_datetime.alarm_time
      data:
        timestamp: '9999999000'
determine_last_day_of_month:
  alias: Determine last day of month
  sequence:
  - service: input_datetime.set_datetime
    target:
      entity_id: input_datetime.end_of_month
    data:
      datetime: "{%- macro last_dayofmonth(month, year) -%}\n  {%- set daysinmonths
        = [31,28,31,30,31,30,31,31,30,31,30,31] -%}\n  {%- set month = month|int -%}
        \ \n  {%- set year = year|int -%}\n  {# Simplified leap year calculation.
        See https://www.mathsisfun.com/leap-years.html #}\n  {%- set isleapyear =
        year % 4 == 0 and (year % 100 != 0 or year % 400 == 0) -%}\n  {%- set monthindex
        = month-1 -%}\n  {%- if month == 2 and isleapyear -%}\n    {{ daysinmonths[monthindex]+1
        }}\n  {%- else -%}\n    {{ daysinmonths[monthindex] }}\n  {%- endif -%}\n{%-
        endmacro -%} {%- set month = now().month -%} {%- set year = now().year -%}
        {%- set lastDay = last_dayofmonth(month, year) -%} {%- set lastDayDateString
        = (year | string) + \"-\" + (month | string) + \"-\" + (lastDay | string)
        + \"T23:59:55\" -%} {%- set lastDayDate = as_datetime(lastDayDateString) -%}
        {{ lastDayDate }}"
  mode: single
turn_off_after_half_hour:
  sequence:
  - delay:
      hours: 0
      minutes: 30
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    target:
      entity_id: light.everywhere
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - service: light.turn_off
    target:
      entity_id: light.everywhere
  mode: single
  alias: turn off after half hour
boiler_heating:
  alias: Boiler heating
  sequence:
  - service: script.turn_on
    target:
      entity_id: script.radiator_fan_office_on
    data: {}
  - repeat:
      while:
      - condition: state
        entity_id: binary_sensor.heating_required
        state: 'on'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.shelly1_boiler
        data: {}
      - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.heating_required
          to: 'off'
        timeout: 00:14:50
      - service: switch.turn_off
        target:
          entity_id: switch.shelly1_boiler
        data: {}
      - delay:
          hours: 0
          minutes: 2
          seconds: 0
          milliseconds: 0
  - delay:
      hours: 0
      minutes: 3
      seconds: 0
      milliseconds: 0
  - type: turn_off
    device_id: adca78ce5ccc0f695957716cd0ef5726
    entity_id: switch.tradfri_plug_d
    domain: switch
  mode: restart
  icon: mdi:fire
radiator_fan_office_on:
  alias: radiator fan office on
  sequence:
  - delay:
      hours: 0
      minutes: 7
      seconds: 0
      milliseconds: 0
  - condition: state
    entity_id: input_boolean.office_heat
    state: 'on'
  - type: turn_on
    device_id: adca78ce5ccc0f695957716cd0ef5726
    entity_id: switch.tradfri_plug_d
    domain: switch
  mode: restart
doorbell_light:
  alias: doorbell light
  sequence:
  - service: light.turn_on
    data:
      brightness: 92
    target:
      entity_id:
      - light.wled
  - service: select.select_option
    data:
      option: bell
    target:
      entity_id: select.wled_preset
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.wled
  mode: single
automatic_cooling:
  alias: Automatic cooling
  sequence:
  - service: notify.mobile_app_cas_phone
    data:
      title: Inside temperature high
      message: Inside temperature exceeds 30°C. Starting automatic cooling.
      data:
        tag: automatic-cooling
        channel: Climate
        sticky: 'true'
        persistent: 'false'
        visibility: public
        color: red
        clickAction: /lovelace-home/climate
        actions:
        - action: STOP_AUTOMATIC_COOLING
          title: Stop Cooling
  - service: climate.turn_on
    data: {}
    target:
      entity_id:
      - climate.living_room
      - climate.bedroom
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: climate.set_hvac_mode
    data:
      hvac_mode: cool
    target:
      entity_id:
      - climate.living_room
      - climate.bedroom
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: climate.set_temperature
    data:
      temperature: 25
      hvac_mode: cool
    target:
      entity_id:
      - climate.bedroom
      - climate.living_room
  - service: climate.set_fan_mode
    data:
      fan_mode: NATURE
    target:
      entity_id:
      - climate.living_room
      - climate.bedroom
  - service: notify.mobile_app_cas_phone
    data:
      title: Inside temperature high
      message: Running automatic cooling
      data:
        tag: automatic-cooling
        channel: Climate
        sticky: 'true'
        persistent: 'true'
        visibility: public
        color: red
        clickAction: /lovelace-home/climate
        chronometer: 'true'
        when: '{{now() | as_timestamp | round - 5}}'
        actions:
        - action: STOP_AUTOMATIC_COOLING
          title: Stop Cooling
  - wait_for_trigger:
    - platform: numeric_state
      entity_id: climate.tstat_8d728f
      below: '25'
      attribute: current_temperature
      for:
        hours: 0
        minutes: 5
        seconds: 0
    - platform: numeric_state
      entity_id: climate.office
      attribute: current_temperature
      for:
        hours: 0
        minutes: 5
        seconds: 0
      below: '25'
    timeout: 00:01:00
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: numeric_state
          entity_id: climate.tstat_8d728f
          attribute: current_temperature
          below: '25'
        - condition: numeric_state
          entity_id: climate.office
          attribute: current_temperature
          below: '25'
      sequence:
      - service: notify.mobile_app_cas_phone
        data:
          title: Inside temperature normal
          message: Automatic cooling completed
          data:
            tag: automatic-cooling
            channel: Climate
            sticky: 'true'
            persistent: 'false'
            visibility: public
            color: blue
            clickAction: /lovelace-home/climate
            actions:
            - action: RUN_AUTOMATIC_COOLING
              title: Cool 1 hour
    default:
    - service: notify.mobile_app_cas_phone
      data:
        title: Inside temperature high
        message: Automatic cooling stopped after 1 hour. Current temperature still
          exceeds 25°C.
        data:
          tag: automatic-cooling
          channel: Climate
          sticky: 'true'
          persistent: 'false'
          visibility: public
          color: red
          clickAction: /lovelace-home/climate
          actions:
          - action: RUN_AUTOMATIC_COOLING
            title: Cool 1 hour
  - service: climate.turn_off
    data: {}
    target:
      entity_id:
      - climate.bedroom
      - climate.living_room
  mode: single
determine_desired_charge_speed:
  alias: Determine desired charge speed
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.fully_charge_car
        state: 'on'
      sequence:
      - service: input_number.set_value
        data:
          value: 16
        target:
          entity_id: input_number.charge_speed
    - conditions:
      - condition: state
        entity_id: input_boolean.fully_charge_car
        state: 'off'
      sequence:
      - service: pyscript.calculate_charge_speed
        data: {}
  mode: queued
  icon: mdi:ev-station
  max: 10
preheat_car:
  alias: Preheat car
  sequence:
  - service: rest_command.preheat_car
    data: {}
  mode: single
  icon: mdi:heat-wave
movie_mode:
  alias: Movie mode
  sequence:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.living_room_automatic_lights
  - service: scene.turn_on
    target:
      entity_id: scene.living_room_movie
    metadata: {}
  - service: media_player.media_pause
    data: {}
    target:
      entity_id: media_player.upstairs
  - type: turn_on
    device_id: 63f54d7f3098a47f14a5a25554006249
    entity_id: switch.living_room_surround_music_full_volume
    domain: switch
  mode: single
  icon: mdi:theater
