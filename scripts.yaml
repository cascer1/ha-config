thermostat_away:
  alias: Thermostat to away
  description: Set the thermostat temperature to the configured away temperature
  icon: mdi:thermostat
  mode: single
  sequence:
  - service: climate.set_temperature
    entity_id: climate.tstat_8d728f
    data:
      temperature: '{{ states(''input_number.away_temperature'') | float }}'
thermostat_home:
  alias: Thermostat to home
  description: Set the thermostat temperature to the configured home temperature
  icon: mdi:thermostat
  mode: single
  sequence:
  - service: climate.set_temperature
    entity_id: climate.tstat_8d728f
    data:
      temperature: '{{ states(''input_number.home_temperature'') | float }}'
lights_not_home:
  alias: Lights not home
  description: Set the lights when leaving home, depending on daylight
  icon: mdi:lamp
  mode: single
  sequence:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: numeric_state
          entity_id: sun.sun
          attribute: elevation
          below: input_number.sun_elevation_dark
        - condition: time
          after: '12:00:00'
          before: input_datetime.night_time
      sequence:
      - scene: scene.away
    default:
    - service: light.turn_off
      entity_id: light.everywhere
lights_home:
  alias: Lights home
  description: Turn on the lights when returning home
  icon: mdi:lamp
  mode: single
  sequence:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sun.sun
        attribute: elevation
        below: input_number.sun_elevation_dark
      sequence:
      - scene: scene.relax
    default:
    - scene: scene.home
home_music:
  alias: Home Music
  sequence:
  - service: media_player.volume_set
    entity_id: media_player.living_room_sonos
    data:
      volume_level: '{{ states(''input_number.home_music_volume_level'') }}'
  - service: media_player.shuffle_set
    data:
      shuffle: true
    entity_id: media_player.living_room_sonos
  - service: media_player.repeat_set
    data:
      repeat: all
    entity_id: media_player.living_room_sonos
  - choose:
    - conditions:
      - condition: state
        entity_id: person.cas_eliens
        state: home
      sequence:
      - service: media_player.select_source
        entity_id: media_player.living_room_sonos
        data:
          source: '{{ states(''input_text.home_music_source_cas'') }}'
    default:
    - service: media_player.select_source
      entity_id: media_player.living_room_sonos
      data:
        source: '{{ states(''input_text.home_music_source_bert'') }}'
  mode: single
  icon: mdi:music
wake_up:
  alias: Wake Up
  icon: mdi:alarm
  sequence:
  - service: script.morning_music
  - service: input_boolean.turn_on
    entity_id: input_boolean.woken_up
morning_music:
  alias: Morning Music
  icon: mdi:music
  sequence:
  - service: media_player.select_source
    entity_id: media_player.living_room_sonos
    data:
      source: '{{ states(''input_text.morning_music_source'') }}'
  - service: media_player.shuffle_set
    data:
      shuffle: true
    entity_id: media_player.living_room_sonos
  - service: media_player.repeat_set
    data:
      repeat: all
    entity_id: media_player.living_room_sonos
  mode: single