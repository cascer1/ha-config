- id: watching_tv
  alias: Watching TV
  trigger:
  - platform: state
    entity_id: media_player.plex_plex_for_android_tv_living_room_tv
    to: playing
  action:
  - service: media_player.media_pause
    entity_id: media_player.living_room_sonos
  mode: single
- id: thermostat_down_away
  alias: Thermostat low while away
  description: Keep the thermostat temperature down while away
  trigger:
  - platform: state
    entity_id: climate.tstat_8d728f
    attribute: temperature
  condition:
  - condition: state
    entity_id: input_boolean.house_occupied
    state: 'off'
  - condition: template
    value_template: '{{ (state_attr(''climate.tstat_8d728f'', ''temperature'')|float)
      > (states(''input_number.away_temperature'') | float) }}'
  action:
  - service: script.thermostat_away
  mode: single
- id: leaving_home
  alias: Leaving home
  description: Turn down the thermostat and turn off the lights when everyone leaves
    and stays away for 5 minutes.
  trigger:
  - platform: state
    entity_id: input_boolean.house_occupied
    from: 'on'
    for: 00:05:00
    to: 'off'
  action:
  - service: script.lights_not_home
  - service: script.thermostat_away
  - service: media_player.media_stop
    entity_id: media_player.living_room_sonos
  mode: single
- id: returning_home
  alias: Returning home
  description: Turn up the thermostat and turn on the lights when someone comes home
  trigger:
  - platform: state
    entity_id: input_boolean.house_occupied
    from: 'off'
    to: 'on'
  action:
  - service: script.lights_home
  - condition: time
    after: input_datetime.morning_time
    before: input_datetime.night_time
  - service: script.thermostat_home
  - service: script.home_music
  mode: single
- id: sun_setting
  alias: Sun setting
  trigger:
  - platform: sun
    event: sunset
    offset: -00:30:00
  condition:
  - condition: state
    entity_id: light.everywhere
    state: 'off'
  action:
  - service: script.lights_{% if states('input_boolean.house_occupied') -%}home{%-
      else -%}not_home{%- endif %}
  mode: single
- id: lights_off_away
  alias: lights off when away
  description: Turn off the lights when nobody is home at night
  trigger:
  - platform: time
    at: input_datetime.night_time
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: input_number.sun_elevation_dark
  condition:
  - condition: state
    entity_id: input_boolean.house_occupied
    state: 'off'
  action:
  - service: light.turn_off
    entity_id: light.everywhere
  mode: single
- id: store_daily_utility_usage
  alias: Store daily utility usage
  trigger:
  - platform: time
    at: '23:59:55'
  action:
  - service: notify.utilitydaily
    data_template:
      message: ',{{states.sensor.energy_daily_low_meter.state}},{{states.sensor.energy_daily_high_meter.state}},{{states.sensor.energy_production_daily_low_meter.state}},{{states.sensor.energy_production_daily_high_meter.state}},{{(states.sensor.solaredge_energy_today.state
        | float)/1000}},{{states.sensor.gas_daily_meter.state}}'
  initial_state: 'true'
- id: store_monthly_utility_usage
  alias: Store monthly utility usage
  trigger:
  - platform: time
    at: '23:59:55'
  condition:
  - condition: template
    value_template: '{{now().day == 14}}'
  action:
  - service: notify.utilitymonthly
    data_template:
      message: ',{{states.sensor.energy_monthly_low_meter.state}},{{states.sensor.energy_monthly_high_meter.state}},{{states.sensor.energy_production_monthly_low_meter.state}},{{states.sensor.energy_production_monthly_high_meter.state}},{{(states.sensor.solar_monthly_meter.state
        | float)/1000}},{{states.sensor.gas_monthly_meter.state}}'
  initial_state: 'true'
  mode: single
- id: sonos_off_at_night
  alias: downstairs off at night
  trigger:
  - platform: state
    entity_id: light.downstairs
    from: 'on'
    to: 'off'
    for: 00:05:00
  - platform: time
    at: input_datetime.night_time
  condition:
  - condition: time
    after: input_datetime.evening_time
  - condition: state
    entity_id: light.downstairs
    state: 'off'
  action:
  - service: media_player.media_pause
    entity_id: media_player.living_room_sonos
  - service: climate.turn_off
    target:
      entity_id: climate.living_room
  mode: single
- id: going_to_bed
  alias: Going to bed
  description: Turn off the thermostat and sonos after all the lights are turned off
    at night
  trigger:
  - platform: state
    entity_id: light.inside
    from: 'on'
    to: 'off'
    for: 00:05:00
  - platform: time
    at: input_datetime.night_time
  condition:
  - condition: time
    after: input_datetime.night_time
  - condition: state
    entity_id: light.inside
    state: 'off'
  - condition: state
    entity_id: group.awesome_people
    state: home
  - condition: state
    entity_id: input_boolean.night_time
    state: 'off'
  action:
  - service: script.thermostat_sleep
  - service: media_player.media_pause
    entity_id: media_player.living_room_sonos
  - service: light.turn_off
    target:
      entity_id:
      - light.inside
      - light.outside
  mode: single
- id: good_morning
  alias: Good Morning
  description: Triggers when first activity is detected downstairs
  trigger:
  - platform: state
    entity_id: light.downstairs
    from: 'off'
    to: 'on'
  condition:
  - condition: and
    conditions:
    - condition: time
      after: input_datetime.morning_time
    - condition: state
      entity_id: input_boolean.woken_up
      state: 'off'
  action:
  - service: script.wake_up
  mode: single
- id: reset_states
  alias: Reset states
  description: Reset states for daily events
  trigger:
  - platform: time
    at: 03:00:00
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.woken_up
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.downstairs
      - light.outside
  - service: switch.turn_off
    target:
      entity_id: switch.adaptive_lighting_bedroom
  mode: single
- id: night_time_toggle
  alias: Turn off night mode
  description: Toggle the time_night input boolean value
  trigger:
  - platform: time
    at: input_datetime.morning_time
  action:
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.night_time
  mode: single
- id: door_bell_pressed
  alias: doorbell
  description: ''
  trigger:
  - type: powered
    platform: device
    device_id: 5bfd9f27f34c77a83fd342bf8f93e7cc
    entity_id: binary_sensor.shelly1_e8db84d3500b_input
    domain: binary_sensor
  action:
  - service: script.doorbell
    data:
      count: 1
  - delay: 1
  mode: single
- id: door_bell_pressed_long
  alias: Door bell pressed long
  description: Door bell pressed for 20 seconds
  trigger:
  - type: powered
    platform: device
    device_id: 5bfd9f27f34c77a83fd342bf8f93e7cc
    entity_id: binary_sensor.shelly1_e8db84d3500b_input
    domain: binary_sensor
    for:
      hours: 0
      minutes: 0
      seconds: 20
      milliseconds: 0
  action:
  - service: light.turn_on
    target:
      entity_id: light.everywhere
    data:
      flash: long
  - service: script.doorbell
    data:
      count: 5
  mode: single
- id: night_mode_on
  alias: turn on night mode
  description: ''
  trigger:
  - platform: state
    entity_id: light.everywhere
    to: 'off'
    for: 00:05:00
  - platform: time
    at: input_datetime.deep_night_time
  condition:
  - condition: time
    after: input_datetime.night_time
  - condition: state
    entity_id: light.everywhere
    state: 'off'
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.night_time
  mode: single
- id: toggle_sleep_mode
  alias: Toggle sleep mode
  description: Toggle sleep mode for adaptive lights
  trigger:
  - platform: state
    entity_id: input_boolean.night_time
  - platform: homeassistant
    event: start
  action:
  - service: switch.turn_{{ sleep_mode }}
    entity_id:
    - switch.adaptive_lighting_sleep_mode_bedroom
    - switch.adaptive_lighting_sleep_mode_downstairs
  variables:
    sleep_mode: '{{ states(''input_boolean.night_time'') }}'
  mode: single
- id: toggle_home_occupied
  alias: Toggle home occupied
  description: Set the home occupied boolean
  trigger:
  - platform: state
    entity_id: group.awesome_people
  - platform: homeassistant
    event: start
  action:
  - service: input_boolean.turn_{% if is_state('group.awesome_people', 'home') -%}on{%-
      else -%}off{%- endif %}
    entity_id: input_boolean.house_occupied
- id: toggle_climate_mode
  alias: Toggle climate mode
  trigger:
  - platform: state
    entity_id: input_select.climate_mode
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.climate_mode
        state: 'off'
      sequence:
      - service: climate.turn_off
        target:
          entity_id:
          - climate.living_room
          - climate.bedroom
    default:
    - service: script.reload_climate_automations
  mode: single
